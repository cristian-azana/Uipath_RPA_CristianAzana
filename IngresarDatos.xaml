<Activity mc:Ignorable="sap sap2010" x:Class="IngresoDatos" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_timeInicio" Type="OutArgument(s:DateTime)" />
    <x:Property Name="out_provincia" Type="OutArgument(x:String)" />
    <x:Property Name="out_apellido" Type="OutArgument(x:String)" />
    <x:Property Name="out_correo" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>IngresoDatos_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="IngresoDatos" sap:VirtualizedContainerService.HintSize="1309,556" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="in_Apellido" />
      <Variable x:TypeArguments="x:String" Name="in_correo" />
      <Variable x:TypeArguments="x:String" Name="in_Provincia" />
      <Variable x:TypeArguments="s:DateTime" Name="timeInicio" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Size x:Key="ShapeSize">50,50</av:Size>
        <av:Point x:Key="ShapeLocation">325,195</av:Point>
        <av:PointCollection x:Key="ConnectorLocation">375,220 405,220 405,280 465,280</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">465,245</av:Point>
          <av:Size x:Key="ShapeSize">110,70</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="ProcesoDinamico" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
          <Variable x:TypeArguments="x:String" Name="dir_log" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="524,175" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[Date.Now.ToString(&quot;dd/MM/yy HH:mm:ss&quot;)+&quot; &quot;+&quot; Inicio de llenado de informacion en cuadro de textos: APELLIDO, PROVINCIA, CORREO &quot;]" />
        <Assign DisplayName="IniciaMedicionTiempo" sap:VirtualizedContainerService.HintSize="524,115" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="s:DateTime">[timeInicio]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="config.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="524,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="config.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="524,115" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[dir_log]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Config("logs").ToString.Trim]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[dir_log]" sap:VirtualizedContainerService.HintSize="524,167" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[Date.Now.ToString(&quot;dd/MM/yy HH:mm:ss&quot;)+&quot; &quot;+&quot; Inicio de llenado de informacion en cuadro de texto: APELLIDO, PROVINCIA, CORREO &quot;]" UseDefaultEncoding="False" />
        <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[String.IsNullOrWhiteSpace(in_Apellido) OrElse _&#xA;         String.IsNullOrWhiteSpace(in_Provincia) OrElse _&#xA;         String.IsNullOrWhiteSpace(in_correo)]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="524,1287" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_4">
          <ui:InterruptibleDoWhile.Body>
            <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="522,1156" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" DisplayName="inputApellido" sap:VirtualizedContainerService.HintSize="488,934" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
                <ui:InterruptibleDoWhile.Body>
                  <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="486,803" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="452,275" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="[&quot;Por favor ingrese el APELLIDO a buscar en la Guia Telefonica&quot; &amp; vbCrLf &amp; vbCrLf &amp; &quot;Este campo solo admite letras&quot;]" Title="Bievenido" TopMost="True">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[in_Apellido]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                    <If Condition="[in_Apellido.ToString().Any(Function(c) Not Char.IsLetter(c))]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="452,468" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:02" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Solo puede ingresar un apellido&quot;&amp; vbCrLf &amp; vbCrLf &amp; &quot;Valores numericos no permitidos en este campo&quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:01" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Informacion correcta&quot;]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ui:InterruptibleDoWhile.Body>
                <ui:InterruptibleDoWhile.Condition>
                  <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="in_Apellido.ToString().Any(Function(c) Not Char.IsLetter(c))" />
                </ui:InterruptibleDoWhile.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InterruptibleDoWhile>
              <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[in_Provincia.ToString().Any(Function(c) Not Char.IsLetter(c)) Or in_Provincia.ToString().Any(Function(c) Not Char.IsUpper(c))]" DisplayName="inputProvincia" sap:VirtualizedContainerService.HintSize="488,57" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                <ui:InterruptibleDoWhile.Body>
                  <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="486,803" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="452,275" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="[&quot;Por favor ingrese la PROVINCIA donde buscar&quot;  &amp; vbCrLf &amp; vbCrLf &amp; &quot;Este campo no admite letras minusculas&quot;]" Title="Bievenido" TopMost="True">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[in_Provincia]</OutArgument>
                      </ui:InputDialog.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InputDialog>
                    <If Condition="[in_Provincia.ToString().Any(Function(c) Not Char.IsLetter(c)) Or in_Provincia.ToString().Any(Function(c) Not Char.IsUpper(c))]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="452,468" sap2010:WorkflowViewState.IdRef="If_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:02" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Porfavor ingrese solo letras MAYUSCULAS&quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:01" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Informacion correcta&quot;]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ui:InterruptibleDoWhile.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InterruptibleDoWhile>
              <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[Not System.Text.RegularExpressions.Regex.IsMatch(in_correo.ToString(), &quot;^[^@\s]+@[^@\s]+\.[^@\s]+$&quot;)]" DisplayName="inputCorreo" sap:VirtualizedContainerService.HintSize="488,57" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
                <ui:InterruptibleDoWhile.Body>
                  <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="486,803" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="452,275" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Por favor ingrese un correo electronico valido para el envio del reporte" Title="Bievenido" TopMost="True">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[in_correo]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                    <If Condition="[Not System.Text.RegularExpressions.Regex.IsMatch(in_correo.ToString(), &quot;^[^@\s]+@[^@\s]+\.[^@\s]+$&quot;)]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="452,468" sap2010:WorkflowViewState.IdRef="If_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:02" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;Porfavor ingrese un correo electronico valido&quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:01" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;Informacion correcta&quot;]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ui:InterruptibleDoWhile.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InterruptibleDoWhile>
              <If sap2010:Annotation.AnnotationText="debe estar lleno los 3 campos solicitados&#xD;&#xA;" Condition="[String.IsNullOrWhiteSpace(in_Apellido) OrElse _&#xA;         String.IsNullOrWhiteSpace(in_Provincia) OrElse _&#xA;         String.IsNullOrWhiteSpace(in_correo)]" DisplayName="condicionesGenerales" sap:VirtualizedContainerService.HintSize="488,48" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:02" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,118" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;Porfavor llene la informacion correctamente&quot;]" />
                    <ui:Continue sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="Continue_1" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:01" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="416,118" sap2010:WorkflowViewState.IdRef="MessageBox_8" Text="[&quot;Los campos ingresados son correctos&quot;]" />
                    <ui:Break sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ui:InterruptibleDoWhile.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InterruptibleDoWhile>
        <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[dir_log]" sap:VirtualizedContainerService.HintSize="524,167" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[Date.Now.ToString(&quot;dd/MM/yy HH:mm:ss&quot;)+&quot; &quot;+&quot; Finalizacion de llenado de informacion en cuadro de texto: APELLIDO, PROVINCIA, CORREO &quot;]" UseDefaultEncoding="False" />
        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="524,115" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_correo]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_correo]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="524,115" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_apellido]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_Apellido]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_provincia]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_Provincia]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="s:DateTime">[out_timeInicio]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">[timeInicio]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="434,166" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[Date.Now.ToString(&quot;dd/MM/yy HH:mm:ss&quot;)+&quot; &quot;+&quot; Finaliza el llenado de informacion en cuadro de textos &quot;]" />
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>